<?xml version="1.0" encoding="GBK"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"       default-lazy-init="true">    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"          init-method="init"   destroy-method="close" >        <property name="driverClassName" value="${r'${jdbc.driverClass}'}" />        <property name="url" value="${r'${jdbc.jdbcUrl}'}" />        <property name="username" value="${r'${jdbc.username}'}" />        <property name="password" value="$${r'${jdbc.password}'}" />        <!-- 初始化连接大小 -->        <property name="initialSize" value="0" />        <!-- 连接池最大使用连接数量 -->        <property name="maxActive" value="20" />        <!-- 连接池最小空闲 -->        <property name="minIdle" value="0" />        <!-- 获取连接最大等待时间 -->        <property name="maxWait" value="60000" />        <property name="poolPreparedStatements" value="true" />        <property name="maxPoolPreparedStatementPerConnectionSize"                  value="33" />        <!-- 用来检测有效sql -->        <property name="validationQuery" value="select 1" />        <property name="testOnBorrow" value="false" />        <property name="testOnReturn" value="false" />        <property name="testWhileIdle" value="true" />        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->        <property name="timeBetweenEvictionRunsMillis" value="60000" />        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->        <property name="minEvictableIdleTimeMillis" value="25200000" />        <!-- 打开removeAbandoned功能 -->        <property name="removeAbandoned" value="true" />        <!-- 1800秒，也就是30分钟 -->        <property name="removeAbandonedTimeout" value="1800" />        <!-- 关闭abanded连接时输出错误日志 -->        <property name="logAbandoned" value="true" />        <!-- 监控数据库 -->        <property name="filters" value="stat,log4j" />        <property name="proxyFilters">            <list>                <bean class="com.alibaba.druid.filter.logging.Slf4jLogFilter">                    <property name="statementExecutableSqlLogEnable" value="true" />                </bean>            </list>        </property>    </bean>    <!--  开 启 Spring 的 事 务 处 理 -->    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"   >        <property name="dataSource" ref="dataSource" />    </bean>    <!--  开启 Spring事务处理注解 -->    <tx:annotation-driven transaction-manager="transactionManager" />    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">        <property name="dataSource" ref="dataSource" />        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />        <property name="mapperLocations">            <list>                 <value>classpath:/mybatis/*Mapper.xml</value>            </list>        </property>    </bean>    <!-- DAO接口所在包名，Spring会自动查找其下的类（dao无实现类需要如下配置） -->    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >        <property name="annotationClass" value="org.springframework.stereotype.Component"/>        <property name="basePackage" value="${basepackage}.dao"/>        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->    </bean>    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" >        <constructor-arg ref="sqlSessionFactory" />    </bean>    <bean id="batchSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">        <constructor-arg index="0" ref="sqlSessionFactory" />        <constructor-arg index="1" value="BATCH" />    </bean></beans>